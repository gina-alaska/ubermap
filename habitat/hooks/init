##!/bin/sh

echo "Removing previous version deployed at {{pkg.svc_static_path}}"
rm -rf {{pkg.svc_static_path}}/*

echo "Deploying new version from {{pkg.path}} to {{pkg.svc_static_path}}"
cp -Ra {{pkg.path}}/static/* {{pkg.svc_static_path}}
echo "Copy .bundle folder to {{pkg.svc_static_path}}"
cp -Ra {{pkg.path}}/static/.bundle {{pkg.svc_static_path}}

echo "Copying database.yml"
cp {{pkg.svc_config_path}}/database.yml {{pkg.svc_static_path}}/config/database.yml

echo "Copying secrets.yml"
cp {{pkg.svc_config_path}}/secrets.yml {{pkg.svc_static_path}}/config/secrets.yml


export GEM_HOME="{{pkg.svc_static_path}}/vendor/bundle/ruby/2.3.0"
export GEM_PATH="$(hab pkg path core/ruby)/lib/ruby/gems/2.3.0:$(hab pkg path core/bundler):$GEM_HOME"
export LD_LIBRARY_PATH="$(hab pkg path core/gcc-libs)/lib"
export PATH="$PATH:{{pkg.svc_static_path}}/bin"
export RAILS_ENV="production"

echo "Changing ownership of {{pkg.svc_static_path}} to hab:hab"
chown -R hab:hab {{pkg.svc_static_path}}
cd {{pkg.svc_static_path}}
echo $PWD
exec 2>&1

if [[ ! -f {{pkg.svc_static_path}}/.migrations_complete ]]; then
  echo "Running 'rake db:migrate' in ${PWD}"
  exec ./bin/rake db:migrate && touch {{pkg.svc_static_path}}/.migrations_complete
fi
